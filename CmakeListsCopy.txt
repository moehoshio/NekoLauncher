cmake_minimum_required(VERSION 3.20)
project(NekoLc)

list(APPEND SRCFILES
    
    # To ensure that qt moc can locate this file
    src/include/neko/log/logviewer.hpp 
    src/include/neko/ui/mainwindow.hpp

    src/mainwindow.cpp    
    src/launcherProcess.cpp
    src/memoryinfo.cpp
    src/loguru.cpp
    src/info.cpp
    src/main.cpp   

)

list(APPEND INCLUDE_DIRS
    ${CMAKE_SOURCE_DIR}/src/include
    ${CMAKE_SOURCE_DIR}/src/include/library
    C:/Qt/6.6.1/msvc2019_64/include
    C:/dev/vcpkg/installed/x64-windows/include
)

# package and qt path
set(CMAKE_PREFIX_PATH "C:/dev/vcpkg/installed/x64-windows")
# package path
set(LIBRARY_DIRS "C:/dev/vcpkg/installed/x64-windows")
# qt path
set(Qt6 "C:/Qt/qt6/msvc2019_64/")
# Debug or Release
set(CMAKE_BUILD_TYPE Release)
set(CMAKE_AUTOMOC ON)

find_package(boost_process REQUIRED CONFIG)
find_package(OpenSSL REQUIRED)
find_package(CURL REQUIRED)
find_package(Qt6 REQUIRED COMPONENTS Core Gui Widgets)

execute_process(
    COMMAND git rev-parse --short HEAD
    OUTPUT_VARIABLE GIT_COMMIT_HASH
    OUTPUT_STRIP_TRAILING_WHITESPACE
)
add_definitions(-DGIT_BUILD_ID="${GIT_COMMIT_HASH}")
add_executable(NekoLc ${SRCFILES})


target_include_directories(NekoLc PRIVATE ${INCLUDE_DIRS})
target_compile_features(NekoLc PRIVATE cxx_std_20)


target_link_libraries(NekoLc PRIVATE 
# qt
Qt6::Core Qt6::Widgets Qt6::Gui
# openssl
OpenSSL::SSL OpenSSL::Crypto
# libcurl
CURL::libcurl
# boost process
Boost::process
)

if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
    if(${CMAKE_BUILD_TYPE} STREQUAL "Release")
        set_target_properties(NekoLc PROPERTIES WIN32_EXECUTABLE TRUE)
        target_sources(NekoLc PRIVATE resource/win/icon.rc)
    endif()

elseif(CMAKE_SYSTEM_NAME STREQUAL "MacOS")
    set_target_properties(NekoLc PROPERTIES
        MACOSX_BUNDLE TRUE
        MACOSX_BUNDLE_BUNDLE_NAME "com.moehoshio.NekoLauncher"
    )

endif() # os