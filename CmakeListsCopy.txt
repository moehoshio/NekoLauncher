cmake_minimum_required(VERSION 3.20)
project(NekoLc)

list(APPEND SRCFILES
    src/mainwindow.cpp    
    src/loguru.cpp
    src/core.cpp
    src/info.cpp
    src/include/logviewer.hpp # To ensure that qt moc can locate this file
    src/main.cpp   
)

list(APPEND INCLUDE_DIRS
    ${CMAKE_SOURCE_DIR}/src/include
)

# package and qt path
set(CMAKE_PREFIX_PATH "C:/dev/vcpkg/installed/x64-windows")
# package path
set(LIBRARY_DIRS "C:/dev/vcpkg/installed/x64-windows")
# qt path
set(Qt6 "C:/Qt/qt6/msvc2019_64/")
# Debug or Release
set(CMAKE_BUILD_TYPE Release)
set(CMAKE_AUTOMOC ON)

find_package(OpenSSL REQUIRED)
find_package(CURL REQUIRED)
find_package(Qt6 REQUIRED COMPONENTS Core Gui Widgets)

add_executable(NekoLc ${SRCFILES})


target_include_directories(NekoLc PRIVATE ${INCLUDE_DIRS})
target_compile_features(NekoLc PRIVATE cxx_std_20)


target_link_libraries(NekoLc PRIVATE 
# qt
Qt6::Core Qt6::Widgets Qt6::Gui
# openssl
OpenSSL::SSL OpenSSL::Crypto
# libcurl
CURL::libcurl
)


function(copy_dlls TARGET_NAME DLL_LIST)
    if(${CMAKE_BUILD_TYPE} STREQUAL "Release")
        foreach(DLL ${DLL_LIST})
            add_custom_command(TARGET ${TARGET_NAME} POST_BUILD
                COMMAND ${CMAKE_COMMAND} -E copy_if_different
                "${LIBRARY_DIRS}/bin/${DLL}"
                $<TARGET_FILE_DIR:${TARGET_NAME}>)
        endforeach()
    elseif(${CMAKE_BUILD_TYPE} STREQUAL "Debug")
        foreach(DLL ${DLL_LIST})
            add_custom_command(TARGET ${TARGET_NAME} POST_BUILD
                COMMAND ${CMAKE_COMMAND} -E copy_if_different
                "${LIBRARY_DIRS}/debug/bin/${DLL}"
                $<TARGET_FILE_DIR:${TARGET_NAME}>)
        endforeach()
    endif()
endfunction()


if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
    if(${CMAKE_BUILD_TYPE} STREQUAL "Release")
        set_target_properties(NekoLc PROPERTIES WIN32_EXECUTABLE TRUE)
        target_sources(NekoLc PRIVATE res/win/icon.rc)
        set(DLL_LIST "libcrypto-3-x64.dll" "libssl-3-x64.dll" "zlib1.dll" "libcurl.dll")
    else()
        set(DLL_LIST "libcrypto-3-x64.dll" "libssl-3-x64.dll" "zlibd1.dll" "libcurl-d.dll")
    endif()
endif() # os win


copy_dlls(NekoLc "${DLL_LIST}")