cmake_minimum_required(VERSION 3.20)
project(NekoLc)


list(APPEND SRCFILES
    src/mainwindow.cpp    
    src/loguru.cpp
    src/exec.cpp
    src/info.cpp
    src/network.cpp
    src/autoinit.cpp
    src/core.cpp
    src/main.cpp
    
)


list(APPEND INCLUDE_DIRS
    ${CMAKE_SOURCE_DIR}/src/include
    C:/Qt/6.6.1/msvc2019_64/include
    C:/ide/VC/Tools/MSVC/14.01/include
)


list(APPEND LIBRARY_DIRS

)


set(CMAKE_PREFIX_PATH "C:/Qt/6.6.1/msvc2019_64")

set(QtBin C:/Qt/6.6.1/msvc2019_64/bin)

set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_AUTOUIC ON)


find_package(Qt6 REQUIRED COMPONENTS Core Gui Widgets MultimediaWidgets REQUIRED)


function(generate_moc SOURCE_HEADER)
get_filename_component(SOURCE_NAME ${SOURCE_HEADER} NAME_WE)
set(MOC_FILE ${CMAKE_SOURCE_DIR}/src/${SOURCE_NAME}_moc.cpp)

add_custom_command(
    OUTPUT ${MOC_FILE}
    COMMAND ${QtBin}/moc ${SOURCE_HEADER} -o ${MOC_FILE}
    DEPENDS ${SOURCE_HEADER}
    COMMENT "Generating MOC file for ${SOURCE_HEADER}"
)

set(GENERATED_MOC_FILES ${GENERATED_MOC_FILES} ${MOC_FILE} PARENT_SCOPE)
endfunction()

set(HEADERS
${CMAKE_SOURCE_DIR}/src/include/mainwindow.h
)

foreach(HEADER ${HEADERS})
generate_moc(${HEADER})
endforeach()


add_executable(NekoLc ${SRCFILES} ${GENERATED_MOC_FILES})


target_include_directories(NekoLc PRIVATE ${INCLUDE_DIRS})
target_compile_features(NekoLc PRIVATE cxx_std_20)


target_link_libraries(NekoLc PRIVATE 
Qt6::Core Qt6::Widgets Qt6::MultimediaWidgets Qt6::Gui
${LIBRARY_DIRS}/libapps.lib
${LIBRARY_DIRS}/openssl.lib
${LIBRARY_DIRS}/libcurl_imp.lib
${LIBRARY_DIRS}/libssl_static.lib
${LIBRARY_DIRS}/zlibstatic.lib
)


# if(MSVC)
    # set_target_properties(NekoLc PROPERTIES WIN32_EXECUTABLE TRUE)
    # target_sources(NekoLc PRIVATE icon.rc)
# endif()




if(CMAKE_SYSTEM_NAME STREQUAL "Windows")

file(COPY 
    ${LIBRARY_DIRS}/libcurl.dll
    ${LIBRARY_DIRS}/zlib.dll
    ${LIBRARY_DIRS}/libcrypto-3-x64.dll
    ${LIBRARY_DIRS}/libssl-3-x64.dll
    ${QtBin}/Qt6Core.dll
    ${QtBin}/Qt6Gui.dll
    ${QtBin}/Qt6Widgets.dll
    DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/Release
)

file(COPY
    ${QtBin}/../plugins/styles/qwindowsvistastyle.dll
    DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/Release/styles
)

file(COPY
    ${QtBin}/../plugins/platforms/qwindows.dll
    DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/Release/platforms
)

endif()